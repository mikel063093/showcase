<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticuloRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticuloRepository extends EntityRepository
{
	public function getArticulosEstablecimiento($id){
		$em = $this->getEntityManager();
		$consulta = $em->createQueryBuilder()
                        ->addSelect('a')
                        ->from('AppBundle:Articulo', 'a')
                        ->where('a.establecimiento = :establecimiento')->setParameter('establecimiento',$id)
                        ->andWhere('a.cantidad > 0');
        return $consulta->getQuery()->getResult();
	}

    public function autocompletar($palabra){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->addSelect('a.nombre')
            ->from('AppBundle:Articulo', 'a')
            ->where('lower(a.nombre) like :palabra')->setParameter('palabra','%'.$palabra.'%')
            ->andWhere('a.cantidad > 0');
        return $consulta->getQuery()->getResult();
    }

    public function obtenerTodosAutocompletar(){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->addSelect('a.nombre')
            ->from('AppBundle:Articulo', 'a')
            ->where('a.cantidad > 0');
        return $consulta->getQuery()->getResult();
    }


    public function realizarBusqueda($palabra){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->Select('a')
            ->from('AppBundle:Articulo', 'a')
            ->where('a.nombre like :palabra')->setParameter('palabra','%'.$palabra.'%')
            ->andWhere('a.cantidad > 0');

        return $consulta->getQuery()->getResult();
    }

    public function obtenerArticulosEstablecimiento($idEstablecimiento){
        $em = $this->getEntityManager();
        $consulta = $em->createQueryBuilder()
            ->select('a')
            ->from('AppBundle:Articulo','a')
            ->where('a.establecimiento = :idEstablecimiento')
            ->andWhere('a.cantidad > 0')
            ->setParameter('idEstablecimiento',$idEstablecimiento);
        return $consulta->getQuery()->getResult();
    }

    public function obtenerArticulosDestacados($idCategoria = null){


        $conn = $GLOBALS['kernel']->getContainer()->get('database_connection');

        $sql = "SELECT articulo.id as id, sum(articulosPedido.cantidad) cantidad 
                  FROM articulo INNER JOIN articulosPedido ON articulo.id = articulosPedido.id_articulo 
                  WHERE articulo.id_establecimiento IS NOT NULL AND articulo.cantidad > 0
                  GROUP by articulo.id 
                  ORDER BY cantidad DESC 
                  LIMIT 4";

        $rows = $conn->query($sql);
        $ids = array();
        while ($row = $rows->fetch()) {
            $ids[] = $row['id'];
        }

        return $ids;
    }

    public function obtenerTodosArticulosDestacados(){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->select('a')
            ->from('AppBundle:Articulo','a')
            ->andWhere('a.cantidad > 0')
            ->setMaxResults(4);

        return $consulta->getQuery()->getResult();
    }
}
