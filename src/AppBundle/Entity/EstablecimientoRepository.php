<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EstablecimientoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EstablecimientoRepository extends EntityRepository
{
    public function findTodos(){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->addSelect('e')
            ->from('AppBundle:Establecimiento', 'e');


        $consulta->orderBy('e.peso', 'ASC');

        return $consulta;
    }

    public function findTodosCategoria($idCategoria){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->addSelect('e')
            ->from('AppBundle:Establecimiento', 'e')
            ->where('e.categoria = :categoria')->setParameter('categoria',$idCategoria);


        $consulta->orderBy('e.peso', 'ASC');

        return $consulta;
    }


	public function findEstablecimientosCategoria($id){
		$em = $this->getEntityManager();

		$consulta = $em->createQueryBuilder()
                        ->addSelect('e')
                        ->from('AppBundle:Establecimiento', 'e')
                        ->where('e.categoria = :categoria')->setParameter('categoria',$id);
                $consulta->setMaxResults(4);
                $consulta->orderBy('e.peso', 'ASC');

                return $consulta->getQuery()->getResult();
	}
    public function findEstablecimientosCategoriaGeo($id){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->addSelect('e')
            ->from('AppBundle:Establecimiento', 'e')
            ->where('e.categoria = :categoria')->setParameter('categoria',$id);

        $consulta->orderBy('e.peso', 'ASC');

        return $consulta->getQuery()->getResult();
    }

    public function findTodosEstablecimientosCategoria($id){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->addSelect('e')
            ->from('AppBundle:Establecimiento', 'e')
            ->where('e.categoria = :categoria')->setParameter('categoria',$id);

        $consulta->orderBy('e.peso', 'ASC');

        return $consulta->getQuery()->getResult();
    }

	public function obtenerEstablecimintosDestacados($idCategoria = null){
        $conn = $GLOBALS['kernel']->getContainer()->get('database_connection');

        $sql = "SELECT e.id as id, e.peso, avg( p.valor ) AS calificacion, sum( aP.cantidad ) AS vendidos
        FROM establecimiento AS e
        LEFT JOIN puntuacion AS p ON e.id = p.id_establecimiento
        LEFT JOIN articulo AS a ON e.id = a.id_establecimiento
        LEFT JOIN articulosPedido AS aP ON a.id = aP.id_articulo WHERE e.id_categoria IS NOT NULL";

        if($idCategoria){
            $sql = $sql . " AND  e.id_categoria = ".$idCategoria;
        }

        $sql = $sql ."  GROUP BY e.id
        ORDER BY e.peso ASC , calificacion DESC , vendidos DESC LIMIT 4";

        $rows = $conn->query($sql);
        $ids = array();
        while ($row = $rows->fetch()) {
            $ids[] = $row['id'];
        }

        return $ids;
    }
    public function obtenerTodosEstablecimintosDestacados(){

        $conn = $GLOBALS['kernel']->getContainer()->get('database_connection');

        $sql = "SELECT e.id as id, e.peso, avg( p.valor ) AS calificacion, sum( aP.cantidad ) AS vendidos
        FROM establecimiento AS e
        LEFT JOIN puntuacion AS p ON e.id = p.id_establecimiento
        LEFT JOIN articulo AS a ON e.id = a.id_establecimiento
        LEFT JOIN articulosPedido AS aP ON a.id = aP.id_articulo WHERE e.id_categoria IS NOT NULL  GROUP BY e.id
        ORDER BY e.peso ASC , calificacion DESC , vendidos DESC LIMIT 12";

        $rows = $conn->query($sql);
        $ids = array();
        while ($row = $rows->fetch()) {
            $ids[] = $row['id'];
        }

        return $ids;
    }

    public function buscarEstablecimientos(){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->select('e')
            ->from('AppBundle:Establecimiento','e')
            ->where('e.categoria is NOT NULL');


        return $consulta->getQuery()->getResult();
    }

    public function buscarEstablecimientosNombre($filtro){
        $em = $this->getEntityManager();

        $consulta = $em->createQueryBuilder()
            ->select('e')
            ->from('AppBundle:Establecimiento','e')
            ->where('e.categoria is NOT NULL')
            ->andWhere('e.nombre LIKE :filtro')
            ->setParameter('filtro','%'.$filtro.'%');


        return $consulta->getQuery()->getResult();
    }


}
